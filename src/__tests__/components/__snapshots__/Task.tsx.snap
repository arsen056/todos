// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Task Should be render task isDone: false 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <li
        class="taskWrapper"
      >
        <div
          class="taskItem"
        >
          <label
            class="task "
          >
            <input
              class="checkbox"
              type="checkbox"
            />
            <span
              class="customCheckbox"
            />
          </label>
          <span
            class="span "
          >
            Task
          </span>
        </div>
        <button
          class="button undefined"
        >
          x
        </button>
      </li>
    </div>
  </body>,
  "container": <div>
    <li
      class="taskWrapper"
    >
      <div
        class="taskItem"
      >
        <label
          class="task "
        >
          <input
            class="checkbox"
            type="checkbox"
          />
          <span
            class="customCheckbox"
          />
        </label>
        <span
          class="span "
        >
          Task
        </span>
      </div>
      <button
        class="button undefined"
      >
        x
      </button>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Task Should be render task isDone: true 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <li
        class="taskWrapper"
      >
        <div
          class="taskItem"
        >
          <label
            class="task checked"
          >
            <input
              checked=""
              class="checkbox"
              type="checkbox"
            />
            <span
              class="customCheckbox"
            />
          </label>
          <span
            class="span checked"
          >
            Task
          </span>
        </div>
        <button
          class="button undefined"
        >
          x
        </button>
      </li>
    </div>
  </body>,
  "container": <div>
    <li
      class="taskWrapper"
    >
      <div
        class="taskItem"
      >
        <label
          class="task checked"
        >
          <input
            checked=""
            class="checkbox"
            type="checkbox"
          />
          <span
            class="customCheckbox"
          />
        </label>
        <span
          class="span checked"
        >
          Task
        </span>
      </div>
      <button
        class="button undefined"
      >
        x
      </button>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Task Should be render todolist 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <li
        class="taskWrapper"
      >
        <div
          class="taskItem"
        >
          <label
            class="task checked"
          >
            <input
              checked=""
              class="checkbox"
              type="checkbox"
            />
            <span
              class="customCheckbox"
            />
          </label>
          <span
            class="span checked"
          >
            Task
          </span>
        </div>
        <button
          class="button undefined"
        >
          x
        </button>
      </li>
    </div>
  </body>,
  "container": <div>
    <li
      class="taskWrapper"
    >
      <div
        class="taskItem"
      >
        <label
          class="task checked"
        >
          <input
            checked=""
            class="checkbox"
            type="checkbox"
          />
          <span
            class="customCheckbox"
          />
        </label>
        <span
          class="span checked"
        >
          Task
        </span>
      </div>
      <button
        class="button undefined"
      >
        x
      </button>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
